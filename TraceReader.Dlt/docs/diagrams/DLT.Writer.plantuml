@startuml DLT.Writer
interface IDisposable

interface ITraceLine

interface ITraceWriter<TLine:ITraceLine> {
    WriteLineAsync(line: TLine): Task
}

IDisposable <|.d. ITraceWriter

interface ITraceWriterFactory<TLine> {
    +CreateAsync(stream: Stream): Task<ITraceWriter<TLine>>
    +CreateAsync(fileName: string): Task<ITraceWriter<TLine>>
}

ITraceWriterFactory -r- ITraceWriter : <<creates>>

interface ITraceEncoder
interface ITraceEncoderFactory

ITraceEncoderFactory -r- ITraceEncoder
class DltTraceWriterFactory<TLine:DltTraceLineBase> {
    +CreateAsync(stream: Stream): Task<ITraceWriter<DltTraceLineBase>>
    +CreateAsync(fileName: string): Task<ITraceWriter<DltTraceLineBase>>
}

ITraceWriterFactory <|.d. DltTraceWriterFactory
class DltTraceEncoderFactory<TLine:DltTraceLineBase>

ITraceEncoderFactory <|.d. DltTraceEncoderFactory
DltTraceWriterFactory o-r- DltTraceEncoderFactory

class DltTraceWriter<TLine:DltTraceLineBase>
class DltTraceEncoder<TLine:DltTraceLineBase>

DltTraceWriter o-r- DltTraceEncoder
'DltTraceWriter .u.|> ITraceWriter

DltTraceWriterFactory -d-> DltTraceWriter : <<creates>>
DltTraceEncoderFactory -d-> DltTraceEncoder : <<creates>>
@enduml