@startuml DLT.WriterControl

class DltTraceEncoder<TLine:DltTraceLineBase> {
    +Encode(buffer: Span<byte>, line: DltTraceLineBase): Result<int>
}

interface IDltEncoder<TLine:DltTraceLineBase> {
   +Encode(buffer: Span<byte>, line: TLine): Result<int>
}
DltTraceEncoder *-d- IDltEncoder

class ControlDltEncoder {
   +Encode(buffer: Span<byte>, line: DltControlTraceLine): int
}
IDltEncoder <|.d. ControlDltEncoder : TLine -> DltControlTraceLine

interface IControlArgEncoder {
    +Encode(buffer: Span<byte>, msbf: bool, arg: IControlArg): Result<int>
}

class ControlArgEncoder {
    +Encode(buffer: Span<byte>, msbf: bool, arg: IControlArg): int
}
IControlArgEncoder <|.d. ControlArgEncoder
ControlDltEncoder *-r- ControlArgEncoder

class GetSoftwareVersionRequestEncoder
class GetSoftwareVersionResponseEncoder
class SetTraceStatusRequestEncoder
class SetTraceStatusResponseEncoder
class GetTraceStatusRequestEncoder
class GetTraceStatusResponseEncoder

IControlArgEncoder <|..d. GetSoftwareVersionRequestEncoder
IControlArgEncoder <|..d. GetSoftwareVersionResponseEncoder
IControlArgEncoder <|..d. SetTraceStatusRequestEncoder
IControlArgEncoder <|..d. SetTraceStatusResponseEncoder
IControlArgEncoder <|..d. GetTraceStatusRequestEncoder
IControlArgEncoder <|..d. GetTraceStatusResponseEncoder

ControlArgEncoder *-d- GetSoftwareVersionRequestEncoder
ControlArgEncoder *-d- GetSoftwareVersionResponseEncoder
ControlArgEncoder *-d- SetTraceStatusRequestEncoder
ControlArgEncoder *-d- SetTraceStatusResponseEncoder
ControlArgEncoder *-d- GetTraceStatusRequestEncoder
ControlArgEncoder *-d- GetTraceStatusResponseEncoder

@enduml